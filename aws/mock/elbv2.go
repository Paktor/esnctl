// Automatically generated by MockGen. DO NOT EDIT!
// Source: vendor/github.com/aws/aws-sdk-go/service/elbv2/elbv2iface/interface.go

package mock

import (
	request "github.com/aws/aws-sdk-go/aws/request"
	elbv2 "github.com/aws/aws-sdk-go/service/elbv2"
	gomock "github.com/golang/mock/gomock"
)

// Mock of ELBV2API interface
type MockELBV2API struct {
	ctrl     *gomock.Controller
	recorder *_MockELBV2APIRecorder
}

// Recorder for MockELBV2API (not exported)
type _MockELBV2APIRecorder struct {
	mock *MockELBV2API
}

func NewMockELBV2API(ctrl *gomock.Controller) *MockELBV2API {
	mock := &MockELBV2API{ctrl: ctrl}
	mock.recorder = &_MockELBV2APIRecorder{mock}
	return mock
}

func (_m *MockELBV2API) EXPECT() *_MockELBV2APIRecorder {
	return _m.recorder
}

func (_m *MockELBV2API) AddTagsRequest(_param0 *elbv2.AddTagsInput) (*request.Request, *elbv2.AddTagsOutput) {
	ret := _m.ctrl.Call(_m, "AddTagsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.AddTagsOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) AddTagsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddTagsRequest", arg0)
}

func (_m *MockELBV2API) AddTags(_param0 *elbv2.AddTagsInput) (*elbv2.AddTagsOutput, error) {
	ret := _m.ctrl.Call(_m, "AddTags", _param0)
	ret0, _ := ret[0].(*elbv2.AddTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) AddTags(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AddTags", arg0)
}

func (_m *MockELBV2API) CreateListenerRequest(_param0 *elbv2.CreateListenerInput) (*request.Request, *elbv2.CreateListenerOutput) {
	ret := _m.ctrl.Call(_m, "CreateListenerRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.CreateListenerOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) CreateListenerRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateListenerRequest", arg0)
}

func (_m *MockELBV2API) CreateListener(_param0 *elbv2.CreateListenerInput) (*elbv2.CreateListenerOutput, error) {
	ret := _m.ctrl.Call(_m, "CreateListener", _param0)
	ret0, _ := ret[0].(*elbv2.CreateListenerOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) CreateListener(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateListener", arg0)
}

func (_m *MockELBV2API) CreateLoadBalancerRequest(_param0 *elbv2.CreateLoadBalancerInput) (*request.Request, *elbv2.CreateLoadBalancerOutput) {
	ret := _m.ctrl.Call(_m, "CreateLoadBalancerRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.CreateLoadBalancerOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) CreateLoadBalancerRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateLoadBalancerRequest", arg0)
}

func (_m *MockELBV2API) CreateLoadBalancer(_param0 *elbv2.CreateLoadBalancerInput) (*elbv2.CreateLoadBalancerOutput, error) {
	ret := _m.ctrl.Call(_m, "CreateLoadBalancer", _param0)
	ret0, _ := ret[0].(*elbv2.CreateLoadBalancerOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) CreateLoadBalancer(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateLoadBalancer", arg0)
}

func (_m *MockELBV2API) CreateRuleRequest(_param0 *elbv2.CreateRuleInput) (*request.Request, *elbv2.CreateRuleOutput) {
	ret := _m.ctrl.Call(_m, "CreateRuleRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.CreateRuleOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) CreateRuleRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateRuleRequest", arg0)
}

func (_m *MockELBV2API) CreateRule(_param0 *elbv2.CreateRuleInput) (*elbv2.CreateRuleOutput, error) {
	ret := _m.ctrl.Call(_m, "CreateRule", _param0)
	ret0, _ := ret[0].(*elbv2.CreateRuleOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) CreateRule(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateRule", arg0)
}

func (_m *MockELBV2API) CreateTargetGroupRequest(_param0 *elbv2.CreateTargetGroupInput) (*request.Request, *elbv2.CreateTargetGroupOutput) {
	ret := _m.ctrl.Call(_m, "CreateTargetGroupRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.CreateTargetGroupOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) CreateTargetGroupRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateTargetGroupRequest", arg0)
}

func (_m *MockELBV2API) CreateTargetGroup(_param0 *elbv2.CreateTargetGroupInput) (*elbv2.CreateTargetGroupOutput, error) {
	ret := _m.ctrl.Call(_m, "CreateTargetGroup", _param0)
	ret0, _ := ret[0].(*elbv2.CreateTargetGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) CreateTargetGroup(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateTargetGroup", arg0)
}

func (_m *MockELBV2API) DeleteListenerRequest(_param0 *elbv2.DeleteListenerInput) (*request.Request, *elbv2.DeleteListenerOutput) {
	ret := _m.ctrl.Call(_m, "DeleteListenerRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.DeleteListenerOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DeleteListenerRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteListenerRequest", arg0)
}

func (_m *MockELBV2API) DeleteListener(_param0 *elbv2.DeleteListenerInput) (*elbv2.DeleteListenerOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteListener", _param0)
	ret0, _ := ret[0].(*elbv2.DeleteListenerOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DeleteListener(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteListener", arg0)
}

func (_m *MockELBV2API) DeleteLoadBalancerRequest(_param0 *elbv2.DeleteLoadBalancerInput) (*request.Request, *elbv2.DeleteLoadBalancerOutput) {
	ret := _m.ctrl.Call(_m, "DeleteLoadBalancerRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.DeleteLoadBalancerOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DeleteLoadBalancerRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteLoadBalancerRequest", arg0)
}

func (_m *MockELBV2API) DeleteLoadBalancer(_param0 *elbv2.DeleteLoadBalancerInput) (*elbv2.DeleteLoadBalancerOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteLoadBalancer", _param0)
	ret0, _ := ret[0].(*elbv2.DeleteLoadBalancerOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DeleteLoadBalancer(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteLoadBalancer", arg0)
}

func (_m *MockELBV2API) DeleteRuleRequest(_param0 *elbv2.DeleteRuleInput) (*request.Request, *elbv2.DeleteRuleOutput) {
	ret := _m.ctrl.Call(_m, "DeleteRuleRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.DeleteRuleOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DeleteRuleRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteRuleRequest", arg0)
}

func (_m *MockELBV2API) DeleteRule(_param0 *elbv2.DeleteRuleInput) (*elbv2.DeleteRuleOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteRule", _param0)
	ret0, _ := ret[0].(*elbv2.DeleteRuleOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DeleteRule(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteRule", arg0)
}

func (_m *MockELBV2API) DeleteTargetGroupRequest(_param0 *elbv2.DeleteTargetGroupInput) (*request.Request, *elbv2.DeleteTargetGroupOutput) {
	ret := _m.ctrl.Call(_m, "DeleteTargetGroupRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.DeleteTargetGroupOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DeleteTargetGroupRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteTargetGroupRequest", arg0)
}

func (_m *MockELBV2API) DeleteTargetGroup(_param0 *elbv2.DeleteTargetGroupInput) (*elbv2.DeleteTargetGroupOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteTargetGroup", _param0)
	ret0, _ := ret[0].(*elbv2.DeleteTargetGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DeleteTargetGroup(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteTargetGroup", arg0)
}

func (_m *MockELBV2API) DeregisterTargetsRequest(_param0 *elbv2.DeregisterTargetsInput) (*request.Request, *elbv2.DeregisterTargetsOutput) {
	ret := _m.ctrl.Call(_m, "DeregisterTargetsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.DeregisterTargetsOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DeregisterTargetsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeregisterTargetsRequest", arg0)
}

func (_m *MockELBV2API) DeregisterTargets(_param0 *elbv2.DeregisterTargetsInput) (*elbv2.DeregisterTargetsOutput, error) {
	ret := _m.ctrl.Call(_m, "DeregisterTargets", _param0)
	ret0, _ := ret[0].(*elbv2.DeregisterTargetsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DeregisterTargets(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeregisterTargets", arg0)
}

func (_m *MockELBV2API) DescribeListenersRequest(_param0 *elbv2.DescribeListenersInput) (*request.Request, *elbv2.DescribeListenersOutput) {
	ret := _m.ctrl.Call(_m, "DescribeListenersRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.DescribeListenersOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeListenersRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeListenersRequest", arg0)
}

func (_m *MockELBV2API) DescribeListeners(_param0 *elbv2.DescribeListenersInput) (*elbv2.DescribeListenersOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeListeners", _param0)
	ret0, _ := ret[0].(*elbv2.DescribeListenersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeListeners(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeListeners", arg0)
}

func (_m *MockELBV2API) DescribeListenersPages(_param0 *elbv2.DescribeListenersInput, _param1 func(*elbv2.DescribeListenersOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "DescribeListenersPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockELBV2APIRecorder) DescribeListenersPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeListenersPages", arg0, arg1)
}

func (_m *MockELBV2API) DescribeLoadBalancerAttributesRequest(_param0 *elbv2.DescribeLoadBalancerAttributesInput) (*request.Request, *elbv2.DescribeLoadBalancerAttributesOutput) {
	ret := _m.ctrl.Call(_m, "DescribeLoadBalancerAttributesRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.DescribeLoadBalancerAttributesOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeLoadBalancerAttributesRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLoadBalancerAttributesRequest", arg0)
}

func (_m *MockELBV2API) DescribeLoadBalancerAttributes(_param0 *elbv2.DescribeLoadBalancerAttributesInput) (*elbv2.DescribeLoadBalancerAttributesOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeLoadBalancerAttributes", _param0)
	ret0, _ := ret[0].(*elbv2.DescribeLoadBalancerAttributesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeLoadBalancerAttributes(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLoadBalancerAttributes", arg0)
}

func (_m *MockELBV2API) DescribeLoadBalancersRequest(_param0 *elbv2.DescribeLoadBalancersInput) (*request.Request, *elbv2.DescribeLoadBalancersOutput) {
	ret := _m.ctrl.Call(_m, "DescribeLoadBalancersRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.DescribeLoadBalancersOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeLoadBalancersRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLoadBalancersRequest", arg0)
}

func (_m *MockELBV2API) DescribeLoadBalancers(_param0 *elbv2.DescribeLoadBalancersInput) (*elbv2.DescribeLoadBalancersOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeLoadBalancers", _param0)
	ret0, _ := ret[0].(*elbv2.DescribeLoadBalancersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeLoadBalancers(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLoadBalancers", arg0)
}

func (_m *MockELBV2API) DescribeLoadBalancersPages(_param0 *elbv2.DescribeLoadBalancersInput, _param1 func(*elbv2.DescribeLoadBalancersOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "DescribeLoadBalancersPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockELBV2APIRecorder) DescribeLoadBalancersPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeLoadBalancersPages", arg0, arg1)
}

func (_m *MockELBV2API) DescribeRulesRequest(_param0 *elbv2.DescribeRulesInput) (*request.Request, *elbv2.DescribeRulesOutput) {
	ret := _m.ctrl.Call(_m, "DescribeRulesRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.DescribeRulesOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeRulesRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeRulesRequest", arg0)
}

func (_m *MockELBV2API) DescribeRules(_param0 *elbv2.DescribeRulesInput) (*elbv2.DescribeRulesOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeRules", _param0)
	ret0, _ := ret[0].(*elbv2.DescribeRulesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeRules(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeRules", arg0)
}

func (_m *MockELBV2API) DescribeSSLPoliciesRequest(_param0 *elbv2.DescribeSSLPoliciesInput) (*request.Request, *elbv2.DescribeSSLPoliciesOutput) {
	ret := _m.ctrl.Call(_m, "DescribeSSLPoliciesRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.DescribeSSLPoliciesOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeSSLPoliciesRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeSSLPoliciesRequest", arg0)
}

func (_m *MockELBV2API) DescribeSSLPolicies(_param0 *elbv2.DescribeSSLPoliciesInput) (*elbv2.DescribeSSLPoliciesOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeSSLPolicies", _param0)
	ret0, _ := ret[0].(*elbv2.DescribeSSLPoliciesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeSSLPolicies(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeSSLPolicies", arg0)
}

func (_m *MockELBV2API) DescribeTagsRequest(_param0 *elbv2.DescribeTagsInput) (*request.Request, *elbv2.DescribeTagsOutput) {
	ret := _m.ctrl.Call(_m, "DescribeTagsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.DescribeTagsOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeTagsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeTagsRequest", arg0)
}

func (_m *MockELBV2API) DescribeTags(_param0 *elbv2.DescribeTagsInput) (*elbv2.DescribeTagsOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeTags", _param0)
	ret0, _ := ret[0].(*elbv2.DescribeTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeTags(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeTags", arg0)
}

func (_m *MockELBV2API) DescribeTargetGroupAttributesRequest(_param0 *elbv2.DescribeTargetGroupAttributesInput) (*request.Request, *elbv2.DescribeTargetGroupAttributesOutput) {
	ret := _m.ctrl.Call(_m, "DescribeTargetGroupAttributesRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.DescribeTargetGroupAttributesOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeTargetGroupAttributesRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeTargetGroupAttributesRequest", arg0)
}

func (_m *MockELBV2API) DescribeTargetGroupAttributes(_param0 *elbv2.DescribeTargetGroupAttributesInput) (*elbv2.DescribeTargetGroupAttributesOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeTargetGroupAttributes", _param0)
	ret0, _ := ret[0].(*elbv2.DescribeTargetGroupAttributesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeTargetGroupAttributes(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeTargetGroupAttributes", arg0)
}

func (_m *MockELBV2API) DescribeTargetGroupsRequest(_param0 *elbv2.DescribeTargetGroupsInput) (*request.Request, *elbv2.DescribeTargetGroupsOutput) {
	ret := _m.ctrl.Call(_m, "DescribeTargetGroupsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.DescribeTargetGroupsOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeTargetGroupsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeTargetGroupsRequest", arg0)
}

func (_m *MockELBV2API) DescribeTargetGroups(_param0 *elbv2.DescribeTargetGroupsInput) (*elbv2.DescribeTargetGroupsOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeTargetGroups", _param0)
	ret0, _ := ret[0].(*elbv2.DescribeTargetGroupsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeTargetGroups(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeTargetGroups", arg0)
}

func (_m *MockELBV2API) DescribeTargetGroupsPages(_param0 *elbv2.DescribeTargetGroupsInput, _param1 func(*elbv2.DescribeTargetGroupsOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "DescribeTargetGroupsPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockELBV2APIRecorder) DescribeTargetGroupsPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeTargetGroupsPages", arg0, arg1)
}

func (_m *MockELBV2API) DescribeTargetHealthRequest(_param0 *elbv2.DescribeTargetHealthInput) (*request.Request, *elbv2.DescribeTargetHealthOutput) {
	ret := _m.ctrl.Call(_m, "DescribeTargetHealthRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.DescribeTargetHealthOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeTargetHealthRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeTargetHealthRequest", arg0)
}

func (_m *MockELBV2API) DescribeTargetHealth(_param0 *elbv2.DescribeTargetHealthInput) (*elbv2.DescribeTargetHealthOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeTargetHealth", _param0)
	ret0, _ := ret[0].(*elbv2.DescribeTargetHealthOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) DescribeTargetHealth(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeTargetHealth", arg0)
}

func (_m *MockELBV2API) ModifyListenerRequest(_param0 *elbv2.ModifyListenerInput) (*request.Request, *elbv2.ModifyListenerOutput) {
	ret := _m.ctrl.Call(_m, "ModifyListenerRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.ModifyListenerOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) ModifyListenerRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ModifyListenerRequest", arg0)
}

func (_m *MockELBV2API) ModifyListener(_param0 *elbv2.ModifyListenerInput) (*elbv2.ModifyListenerOutput, error) {
	ret := _m.ctrl.Call(_m, "ModifyListener", _param0)
	ret0, _ := ret[0].(*elbv2.ModifyListenerOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) ModifyListener(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ModifyListener", arg0)
}

func (_m *MockELBV2API) ModifyLoadBalancerAttributesRequest(_param0 *elbv2.ModifyLoadBalancerAttributesInput) (*request.Request, *elbv2.ModifyLoadBalancerAttributesOutput) {
	ret := _m.ctrl.Call(_m, "ModifyLoadBalancerAttributesRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.ModifyLoadBalancerAttributesOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) ModifyLoadBalancerAttributesRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ModifyLoadBalancerAttributesRequest", arg0)
}

func (_m *MockELBV2API) ModifyLoadBalancerAttributes(_param0 *elbv2.ModifyLoadBalancerAttributesInput) (*elbv2.ModifyLoadBalancerAttributesOutput, error) {
	ret := _m.ctrl.Call(_m, "ModifyLoadBalancerAttributes", _param0)
	ret0, _ := ret[0].(*elbv2.ModifyLoadBalancerAttributesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) ModifyLoadBalancerAttributes(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ModifyLoadBalancerAttributes", arg0)
}

func (_m *MockELBV2API) ModifyRuleRequest(_param0 *elbv2.ModifyRuleInput) (*request.Request, *elbv2.ModifyRuleOutput) {
	ret := _m.ctrl.Call(_m, "ModifyRuleRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.ModifyRuleOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) ModifyRuleRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ModifyRuleRequest", arg0)
}

func (_m *MockELBV2API) ModifyRule(_param0 *elbv2.ModifyRuleInput) (*elbv2.ModifyRuleOutput, error) {
	ret := _m.ctrl.Call(_m, "ModifyRule", _param0)
	ret0, _ := ret[0].(*elbv2.ModifyRuleOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) ModifyRule(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ModifyRule", arg0)
}

func (_m *MockELBV2API) ModifyTargetGroupRequest(_param0 *elbv2.ModifyTargetGroupInput) (*request.Request, *elbv2.ModifyTargetGroupOutput) {
	ret := _m.ctrl.Call(_m, "ModifyTargetGroupRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.ModifyTargetGroupOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) ModifyTargetGroupRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ModifyTargetGroupRequest", arg0)
}

func (_m *MockELBV2API) ModifyTargetGroup(_param0 *elbv2.ModifyTargetGroupInput) (*elbv2.ModifyTargetGroupOutput, error) {
	ret := _m.ctrl.Call(_m, "ModifyTargetGroup", _param0)
	ret0, _ := ret[0].(*elbv2.ModifyTargetGroupOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) ModifyTargetGroup(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ModifyTargetGroup", arg0)
}

func (_m *MockELBV2API) ModifyTargetGroupAttributesRequest(_param0 *elbv2.ModifyTargetGroupAttributesInput) (*request.Request, *elbv2.ModifyTargetGroupAttributesOutput) {
	ret := _m.ctrl.Call(_m, "ModifyTargetGroupAttributesRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.ModifyTargetGroupAttributesOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) ModifyTargetGroupAttributesRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ModifyTargetGroupAttributesRequest", arg0)
}

func (_m *MockELBV2API) ModifyTargetGroupAttributes(_param0 *elbv2.ModifyTargetGroupAttributesInput) (*elbv2.ModifyTargetGroupAttributesOutput, error) {
	ret := _m.ctrl.Call(_m, "ModifyTargetGroupAttributes", _param0)
	ret0, _ := ret[0].(*elbv2.ModifyTargetGroupAttributesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) ModifyTargetGroupAttributes(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ModifyTargetGroupAttributes", arg0)
}

func (_m *MockELBV2API) RegisterTargetsRequest(_param0 *elbv2.RegisterTargetsInput) (*request.Request, *elbv2.RegisterTargetsOutput) {
	ret := _m.ctrl.Call(_m, "RegisterTargetsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.RegisterTargetsOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) RegisterTargetsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RegisterTargetsRequest", arg0)
}

func (_m *MockELBV2API) RegisterTargets(_param0 *elbv2.RegisterTargetsInput) (*elbv2.RegisterTargetsOutput, error) {
	ret := _m.ctrl.Call(_m, "RegisterTargets", _param0)
	ret0, _ := ret[0].(*elbv2.RegisterTargetsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) RegisterTargets(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RegisterTargets", arg0)
}

func (_m *MockELBV2API) RemoveTagsRequest(_param0 *elbv2.RemoveTagsInput) (*request.Request, *elbv2.RemoveTagsOutput) {
	ret := _m.ctrl.Call(_m, "RemoveTagsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.RemoveTagsOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) RemoveTagsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RemoveTagsRequest", arg0)
}

func (_m *MockELBV2API) RemoveTags(_param0 *elbv2.RemoveTagsInput) (*elbv2.RemoveTagsOutput, error) {
	ret := _m.ctrl.Call(_m, "RemoveTags", _param0)
	ret0, _ := ret[0].(*elbv2.RemoveTagsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) RemoveTags(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RemoveTags", arg0)
}

func (_m *MockELBV2API) SetIpAddressTypeRequest(_param0 *elbv2.SetIpAddressTypeInput) (*request.Request, *elbv2.SetIpAddressTypeOutput) {
	ret := _m.ctrl.Call(_m, "SetIpAddressTypeRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.SetIpAddressTypeOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) SetIpAddressTypeRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetIpAddressTypeRequest", arg0)
}

func (_m *MockELBV2API) SetIpAddressType(_param0 *elbv2.SetIpAddressTypeInput) (*elbv2.SetIpAddressTypeOutput, error) {
	ret := _m.ctrl.Call(_m, "SetIpAddressType", _param0)
	ret0, _ := ret[0].(*elbv2.SetIpAddressTypeOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) SetIpAddressType(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetIpAddressType", arg0)
}

func (_m *MockELBV2API) SetRulePrioritiesRequest(_param0 *elbv2.SetRulePrioritiesInput) (*request.Request, *elbv2.SetRulePrioritiesOutput) {
	ret := _m.ctrl.Call(_m, "SetRulePrioritiesRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.SetRulePrioritiesOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) SetRulePrioritiesRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetRulePrioritiesRequest", arg0)
}

func (_m *MockELBV2API) SetRulePriorities(_param0 *elbv2.SetRulePrioritiesInput) (*elbv2.SetRulePrioritiesOutput, error) {
	ret := _m.ctrl.Call(_m, "SetRulePriorities", _param0)
	ret0, _ := ret[0].(*elbv2.SetRulePrioritiesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) SetRulePriorities(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetRulePriorities", arg0)
}

func (_m *MockELBV2API) SetSecurityGroupsRequest(_param0 *elbv2.SetSecurityGroupsInput) (*request.Request, *elbv2.SetSecurityGroupsOutput) {
	ret := _m.ctrl.Call(_m, "SetSecurityGroupsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.SetSecurityGroupsOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) SetSecurityGroupsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetSecurityGroupsRequest", arg0)
}

func (_m *MockELBV2API) SetSecurityGroups(_param0 *elbv2.SetSecurityGroupsInput) (*elbv2.SetSecurityGroupsOutput, error) {
	ret := _m.ctrl.Call(_m, "SetSecurityGroups", _param0)
	ret0, _ := ret[0].(*elbv2.SetSecurityGroupsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) SetSecurityGroups(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetSecurityGroups", arg0)
}

func (_m *MockELBV2API) SetSubnetsRequest(_param0 *elbv2.SetSubnetsInput) (*request.Request, *elbv2.SetSubnetsOutput) {
	ret := _m.ctrl.Call(_m, "SetSubnetsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*elbv2.SetSubnetsOutput)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) SetSubnetsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetSubnetsRequest", arg0)
}

func (_m *MockELBV2API) SetSubnets(_param0 *elbv2.SetSubnetsInput) (*elbv2.SetSubnetsOutput, error) {
	ret := _m.ctrl.Call(_m, "SetSubnets", _param0)
	ret0, _ := ret[0].(*elbv2.SetSubnetsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockELBV2APIRecorder) SetSubnets(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetSubnets", arg0)
}
